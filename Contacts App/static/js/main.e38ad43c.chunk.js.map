{"version":3,"sources":["components/TopSection.js","components/ListContentLeft.js","components/ListContentRight.js","components/List.js","components/ListsSection.js","components/AddContactContentTop.js","components/AddContactForm.js","components/AddContactContent.js","components/AddContact.js","components/ModalContent.js","App.js","reportWebVitals.js","index.js"],"names":["TopSection","view","changeview","className","id","title","onClick","ListContentLeft","contact","image","name","number","src","ListContentRight","favclick","favourite","e","stopPropagation","List","contacts","modal","ListsSection","map","AddContactContentTop","defaultpic","opengallery","AddContactForm","newcontact","onclick","useState","setName","setNumber","setFavorite","gender","setGender","onSubmit","preventDefault","alert","htmlFor","type","autoComplete","value","onChange","target","Number","checked","currentTarget","AddContactContent","AddContact","clicked","onclicked","changedefaultpic","baseUrl","images","imagelink","openImages","togglingGallery","toggleGallery","ModalContent","editcontacts","contactclicked","filter","App","setContacts","listView","setListView","addContactClicked","setAddContact","pointerEvents","setPointerEvents","pointerEventsOnClick","defaultPic","changeDefaultPic","displayModal","setModal","contactClicked","setClicked","Date","now","newContact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e38ad43c.chunk.js","sourcesContent":["const TopSection = ({view,changeview})=>{\n    return (\n        <section className='top'>\n            <h2>Contacts</h2>\n            <i className={`bi ${view ? \"bi-grid\" : \"bi-list-ul\"}`} id='switchView' title={`${view ? \"Switch to Grid View\" : \"Switch to List View\"}`} onClick={changeview}></i>\n        </section>\n    );\n}\n\nexport default TopSection;","const ListContentLeft = ({ contact })=>{\n    const {image,name,number} = contact;\n    return(\n        <div className='contact__left'>\n            <img src={image} className='contact__left--image'></img>\n            <div className='contact__left__details'>\n                <h6 className='contact__left__details__name'>{name}</h6>\n                <p className='contact__left__details__phone'>{number}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default ListContentLeft;","const ListContentRight = ({ contact,favclick })=>{\n    const { favourite } = contact;\n    return(\n       <div className=\"contact__right\">\n            { favourite ? <i className=\"bi sm bi-star-fill\" title='UnFavorite' onClick={(e)=>{\n                e.stopPropagation();\n                favclick(contact.id)}}></i> :\n                          <i className=\"bi sm bi-star\" title='Add to Favorites' onClick={(e)=>{\n                              e.stopPropagation();\n                              favclick(contact.id)}}></i>}\n       </div> \n    );\n}\n\nexport default ListContentRight;","import ListContentLeft from \"./ListContentLeft\";\nimport ListContentRight from \"./ListContentRight\";\n\nconst List = ({ contacts,favclick,modal })=>{\n    return (\n            <div className='contact' key={ contacts.id } onClick={modal}>\n                <ListContentLeft contact={ contacts }/>\n                <ListContentRight contact={ contacts } favclick={favclick}/>\n            </div>        \n    );\n}\n\nexport default List;","import List from \"./List\"\n\nconst ListsSection = ({ contacts,favclick,view,modal })=>{\n   \n    return (\n        <section className={`contacts ${view ? 'list' : 'grid'}`} >\n        {contacts.map((contact)=>(\n                <List contacts={contact} favclick={favclick} modal={()=>modal(contact.id)}/>\n        ))}\n        </section>\n        \n    );\n}\n\nexport default ListsSection;","const AddContactContentTop = ({ defaultpic,opengallery }) =>{\n    return(\n        <div className='add-contact-content-top'>\n            <img src={`https://raw.githubusercontent.com/rishikumarr/images/main/circle%20avatars/${defaultpic}.png`} className='userimage'></img>\n            <button className='changeimage' onClick={()=>opengallery()}>Change image</button>\n        </div>\n    );\n}\n\nexport default AddContactContentTop;","import { useState } from 'react';\n\nconst AddContactForm = ({ defaultpic,newcontact,onclick }) =>{\n\n    const [name,setName] = useState('');\n    const [number,setNumber] = useState('');\n    let [favourite,setFavorite] = useState(false);\n    let [gender,setGender] = useState(true);\n\n    const submit = (e)=>{\n        e.preventDefault();\n\n        if(!name){\n            alert(\"Please enter name\");\n            return\n        }\n        if(!number){\n            alert('Please enter number');\n            return\n        }\n        newcontact({name,number,favourite,gender});\n        onclick();\n        setName(\"\");\n        setNumber(\"\");\n        setFavorite(false);\n        setGender(true);\n    }\n\n    return(\n        <form className='add-contact-form' onSubmit={submit}>\n            <div className='add-contact-content-middle'>\n                <div className='input'>\n                    <label htmlFor='contactname'>Name</label>\n                    <input type='text' id='contactname' autoComplete=\"off\"  value={name} onChange={(e)=> setName(e.target.value)}></input>\n                </div>\n\n                <div className='input'>                            \n                    <label htmlFor='contactnumber'>Phone no</label>\n                    <input type='number' id='contactnumber' value={number} onChange={(e)=> setNumber(Number(e.target.value))}></input>\n                </div>\n\n                <div className='input'>\n                    <label id='label-gender'>Gender</label>\n                    <input type='radio' name='gender' id='male' value={gender} onChange={(e)=> setGender(gender=true)}></input>\n                    <label htmlFor='male'>Male</label>\n                    <input type='radio' name='gender' id='female' value={gender} onChange={(e)=> setGender(gender=false)}></input>\n                    <label htmlFor='female'>Female</label>\n                </div>\n\n                <div className='input'>\n                    <input type='checkbox' id='fav' value={favourite} checked={favourite} onChange={(e)=> setFavorite(e.currentTarget.checked)}></input>\n                    <label htmlFor='fav'>Add to favourite</label>\n                </div>\n            </div>\n            <div className='add-contact-content-bottom'>\n                <input type='submit' className='save-contact' value='Save contact'></input>\n            </div>\n        </form>\n    );\n}\n\nexport default AddContactForm;","import AddContactContentTop from './AddContactContentTop';\nimport AddContactForm from \"./AddContactForm\";\n\nconst AddContactContent = ({ defaultpic,opengallery,newcontact,onclick }) =>{\n    return (\n        <div className='add-contact-content'>\n                <AddContactContentTop defaultpic={defaultpic} opengallery={opengallery}/>\n                <AddContactForm defaultpic={defaultpic} newcontact={newcontact} onclick={onclick}/>                \n        </div>\n    );\n}\n\nexport default AddContactContent;","import { useState } from \"react\";\nimport AddContactContent from \"./AddContactContent\";\n\nconst AddContact =( {clicked,onclicked,defaultpic,changedefaultpic,newcontact} )=>{\n\n    const baseUrl = \"https://raw.githubusercontent.com/rishikumarr/images/main/circle%20avatars/\";\n\n    const images = [\n        {imagelink :`${baseUrl}m1.png`,id : \"m1\"},\n        {imagelink :`${baseUrl}m2.png`,id : \"m2\"},\n        {imagelink :`${baseUrl}m3.png`,id : \"m3\"},\n        {imagelink :`${baseUrl}m4.png`,id : \"m4\"},\n        {imagelink :`${baseUrl}f1.png`,id : \"f1\"},\n        {imagelink :`${baseUrl}f2.png`,id : \"f2\"},\n        {imagelink :`${baseUrl}f3.png`,id : \"f3\"},\n        {imagelink :`${baseUrl}f4.png`,id : \"f4\"},\n        {imagelink :`${baseUrl}f5.png`,id : \"f5\"},\n        {imagelink :`${baseUrl}M5.png`,id : \"M5\"},\n        {imagelink :`${baseUrl}M6.png`,id : \"M6\"},\n        {imagelink :`${baseUrl}M7.png`,id : \"M7\"},\n        {imagelink :`${baseUrl}M8.png`,id : \"M8\"},\n        {imagelink :`${baseUrl}F6.png`,id : \"F6\"},\n        {imagelink :`${baseUrl}F7.png`,id : \"F7\"},\n        {imagelink :`${baseUrl}F8.png`,id : \"F8\"},\n        {imagelink :`${baseUrl}F9.png`,id : \"F9\"},\n        {imagelink :`${baseUrl}F10.png`,id : \"F10\"},\n        {imagelink :`${baseUrl}F11.png`,id : \"F11\"}\n    ];\n\n    const setContactPic = (id)=>{\n        changedefaultpic(defaultpic = id);\n        toggleGallery();\n    }\n\n    let [openImages,togglingGallery] = useState(false);\n\n    const toggleGallery = ()=>{\n        togglingGallery( openImages ? openImages = false : openImages = true);\n    }\n\n    return (\n        <>\n            <div className={`add-contact ${clicked ? 'open' : \"\"}`}>\n                <AddContactContent defaultpic={defaultpic} opengallery={toggleGallery} newcontact={newcontact} onclick={onclicked}/>\n                <div className={`${openImages ? \"set-profile\" : \"\"} profile-images`}>\n                    <div className='images'>\n                        {images.map((image)=>\n                            <img className='image' key={image.id} src={image.imagelink} onClick={()=>setContactPic(image.id)}></img>\n                        )} \n                    </div>\n                </div>\n            </div>\n            <i className={`bi bi-${clicked ? \"x\" : \"person-plus-fill\"} add-contact-icon`} title={`${clicked ? \"Close\" : \"Add Contact\"}`} onClick={onclicked}></i>\n        </>\n    );\n}\n\nexport default AddContact;\n\n","import { useState } from \"react\";\n\nconst ModalContent = ({ modal,contacts,editcontacts,contactclicked })=>{\n    \n    const deleteContact = ()=>{\n        editcontacts(contacts.filter((contact)=> contactclicked !== contact.id));\n        modal();\n    }\n\n    return (\n       <div className='submodal'>\n            <h3>Do you want to delete this contact ?</h3>\n            <button className='delete-contact' onClick={deleteContact}>Delete contact</button>\n            <div className='close-modal'>\n                <i className='bi bi-x' onClick={modal}></i>\n            </div>\n       </div>\n    );\n}\n\nexport default ModalContent;","import { useReducer, useState } from \"react\";\nimport TopSection from './components/TopSection';\nimport ListsSection from './components/ListsSection';\nimport AddContact from './components/AddContact';\nimport ModalContent from \"./components/ModalContent\";\n\nfunction App() {\n  const baseUrl = \"https://raw.githubusercontent.com/rishikumarr/images/main/circle%20avatars/\";\n\n  const [contacts,setContacts] = useState([\n    {\n        id : 1,\n        image : `${baseUrl}f1.png`,\n        name : \"Jessica Devis\",\n        number : 3562633262,\n        favourite : false,\n        gender : false,\n    },\n    {\n        id : 2,\n        image : `${baseUrl}m3.png`,\n        name : \"John Doe\",\n        number : 3562633262,\n        favourite : true,\n        gender : true,\n    },\n    {\n        id : 3,\n        image : `${baseUrl}m2.png`,\n        name : \"Jim Carry\",\n        number : 3562633262,\n        favourite : false,\n        gender :true,\n    },\n    {\n        id : 4,\n        image : `${baseUrl}m1.png`,\n        name : \"Andrew\",\n        number : 3562633262,\n        favourite : false,\n        gender : true,\n    },\n    {\n        id : 5,\n        image : `${baseUrl}f5.png`,\n        name : \"Katia Williams\",\n        number : 3562633262,\n        favourite : true,\n        gender : false,\n    },\n    {\n        id : 6,\n        image : `${baseUrl}f2.png`,\n        name : \"Christine\",\n        number : 3562633262,\n        favourite : true,\n        gender : false,\n    },\n     {\n        id : 7,\n        image : `${baseUrl}m4.png`,\n        name : \"Dennis Ivy\",\n        number : 3562633262,\n        favourite : false,\n        gender : true,\n    },\n    \n]);\n\n// favorite and unfavorite the contact\nconst favClick = (id)=>{\n  setContacts(\n    contacts.map((contact)=>\n      contact.id === id ? { ...contact,favourite:!contact.favourite} : contact\n      \n  ));\n}\n\n// Change the view \nlet [listView,setListView] = useState(true); // listview is default\n\n// toggling between the views when button clicked\nconst changeView = ()=>{\n  setListView(listView ? listView=false : listView=true);\n}\n\n// Add contact modal \nlet [addContactClicked,setAddContact] = useState(false); // initially it'll be closed\n\n// Toggling between open and close when button clicked\nconst addContactEvent = ()=>{\n  if(displayModal){\n    setModal(false);\n    pointerEventsOnClick();\n  }\n  setAddContact(addContactClicked ? addContactClicked=false : addContactClicked=true);\n  pointerEventsOnClick();\n}\n\n// Pointer Events\nlet [pointerEvents,setPointerEvents] = useState(true);\n\n//changing the pointerEvents onclick\nconst pointerEventsOnClick = ()=>{\n  setPointerEvents( pointerEvents ? pointerEvents = false : pointerEvents = true);\n}\n\n// set default pic\nlet [defaultPic,changeDefaultPic] = useState(\"m1\");\n\n\n//saving new contact\nconst newContact = (contact)=>{\n  const id = Date.now();\n  const newContact = {id,image:`${baseUrl}${defaultPic}.png`,...contact};\n  setContacts([...contacts, newContact]);\n}\n\n//toggling modal\nlet [displayModal,setModal] = useState(false);\n\nconst togglingModal = (id)=>{\n  setModal(displayModal ? displayModal = false : displayModal = true);\n  pointerEventsOnClick();\n  setClicked(id);\n}\n\nconst closeAndOpenModal = ()=>{\n  setModal(displayModal ? displayModal = false : displayModal = true);\n  pointerEventsOnClick();  \n}\n\nlet [contactClicked,setClicked]=useState();\n  return (\n    <div className={`container ${pointerEvents ? \"\" :'disablepointerevents'}`}>\n      <div className={`${displayModal ? \"openmodal\" : \"\"} modal`}>\n        <ModalContent modal={closeAndOpenModal} contacts={contacts} editcontacts={setContacts} contactclicked={contactClicked}/>\n      </div>\n      <TopSection view={listView} changeview={changeView}/>\n      <ListsSection contacts={contacts} favclick={favClick} view={listView} modal={togglingModal}/>\n      <AddContact clicked={addContactClicked} onclicked={addContactEvent} defaultpic={defaultPic} changedefaultpic={changeDefaultPic} newcontact={newContact}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}